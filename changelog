ezc (3.0.0) unstable; urgency=med

  * fixed utils
    - util testing increased
  * updated printing info
    - now prints logging more appropriately
  * updated build system
    - source now included with deb package
  * more utils
    - added base transfer (frombase, tobase)
    - radian to degree (deg), and degree to radian (rad)
  * added environment variable
    - Use export EZC_PREC=1000 to set the number of digits to use default
    - This is overriden by all other methods to set precision
    - Use export EZC_DEG=1 to use degrees in all trig functions
    - Use export EZC_DEG=0 to use continue using radians
    - If you set nothing, it defaults to radian mode
  * added simple expansion
    - You can wrap functions into other functions.
	- Used like sqrt (add 2 3)
  * bug fixes
    - fixed echo print bug where two newlines were printed

 -- Cade Brown <info@chemicaldevelopment.us>  Tue, 13 Dec 2016 16:07:00 -0500

ezc (2.6.0) testing; urgency=low

  * added utils
    - all common functions implemented
  * updated accuracy
    - programs set num digits to largest argument
	  called to set precision doesnt exit

 -- Cade Brown <info@chemicaldevelopment.us>  Mon, 12 Dec 2016 23:40:00 -0500

ezc (2.5.0) stable; urgency=low

  * fixed error print on commandline
    - when using the c option, the compiler would give an error
  * changed build system
    - now copies in python files instead of compiling to executable
  * added utils
    - pi, e, and sqrt are utilities contained

 -- Cade Brown <info@chemicaldevelopment.us>  Mon, 12 Dec 2016 18:20:00 -0500

ezc (2.3.0) stable; urgency=high

  * fixed memory leaks
    - changed default number of constants. This can be set with cvars option
    - changed how we allocate constants so there is no seg fault
  * added many more functions
    - improved calling interface
  * changed logging
    - more pleasing colors, and style with bold, and etc

 -- Cade Brown <info@chemicaldevelopment.us>  Wed, 23 Nov 2016 16:00:00 -0500

ezc (2.2.0) stable; urgency=med

  * added compiler options to control removing files
    - rem and remexec
  * changed default tmp directory to /tmp/
    - you can still set it with tmpd

 -- Cade Brown <info@chemicaldevelopment.us>  Sun, 20 Nov 2016 19:39:15 -0500

ezc (2.1.5-16ubuntu8) stable; urgency=med

  * changed library structure
    - split libMath into libMath and libTrig
    - split libBasic into libBasic and libPrint
  * added many more functions
    - all hyperbolic, normal, arc functions of sin, cos, csc, sec, tan, cot
    - zeta function, hypot, agm
  * added random numbers
    - use `a = ?` to generate a random number between 0 and 1
    - use `a = ? b` to generate a random number between 0 and b
    - use `a = ??` to generate a random number according to std distrobution 
  * changed logging
    - more pleasing colors
    - you can now set verbosity level

 -- Cade Brown <info@chemicaldevelopment.us>  Wed, 23 Nov 2016 00:27:35 -0500

ezc (2.1.1) stable; urgency=med

  * added compiler options to control removing files
    - rem and remexec
  * changed default tmp directory to /tmp/
    - you can still set it with tmpd

 -- Cade Brown <info@chemicaldevelopment.us>  Sun, 20 Nov 2016 19:39:15 -0500

ezc (1.8.0) stable; urgency=med

  * fixed literal related bugs
    - fixed a bug where some functions would interpret literals incorrect
    - i.e. `a = cos -1` was giving a compile time exception
    - fixed a bug with literal allocation
    - sometimes, a seg fault would occur after reaching 10 literals
  * changed the truncate operator from _ to ~
    - this reverts some of 1.7.0_3
    - now, behaviour is: a = ~ n is the largest integer <= n
    - a = b ~ n is the largest multiple of b <= n
  * added commandline and stdin input
    - you can compile and run code without using files
    - you can use stdin or the -c argument
    - still requires read and write in current dir

 -- Cade Brown <info@chemicaldevelopment.us>  Sun, 20 Nov 2016 18:20:15 -0500

ezc (1.7.0) unstable; urgency=low

  * added literals 
    - now, you can pass in literals instead of consts
    i.e. `a = cos ONE` is now `a = cos 1.0`
    - fixed for loops
    Less buggy, and now uses less memory

 -- Cade Brown <info@chemicaldevelopment.us>  Sat, 19 Nov 2016 16:51:43 -0500

ezc (1.4.0) trusty; urgency=low

  * factorial, gamma
    - Factorial (x) can now be computed either by a = factorial b or a = b !
    - gamma is factorial(x-1)
  * user defined functions
    - Create a file, and at the top, write #__name__ $name $args . . .
    And when you compile, you can call it with a = @$name $args
    See the examples folder for more info
  * echo, and literal c code
    - echo now works, use echo "ayy" or echo a to display ayy or var a
    - literal c code can be injected by ending the line with ; or {} enclosing
    For example, printf("ayy"); is read as C code, as is {int a;}

 -- Cade Brown <info@chemicaldevelopment.us>  Sat, 19 Nov 2016 16:51:43 -0500

ezc (1.3.5) trusty; urgency=low

  * Added back mod and trunc functions, gamma, factorial, max, min, etc
    - Mostly in libMath
  * Added constants
    - NEGONE, ZERO, ONE, TWO, FOUR, TEN are their numeric values, and need no init
  * Added new operators
    - Added operators '!', '√', and '~' for factorial, square root, and trunc/multtrunc
	  Used with operators on either side, but by convention, use 'a !', '√ a', and 'a _' or 'a _ b'
    If you do use 'a _', this is equivelent to 'a _ ONE'. the _ returns the largest multiple of b (or ONE) that is less than or equal to a

 -- Cade Brown <info@chemicaldevelopment.us>  Sat, 19 Nov 2016 13:45:30 -0500

ezc (1.3.0) trusty; urgency=low

  * Added regex support, including trunc, and added new multi file feature. needs documentation
    - Multi file builds are now supported, and you can declare each file as a function (strict SRP)
	  These are used with the @ sign to denote local function

 -- Cade Brown <info@chemicaldevelopment.us>  Sat, 19 Nov 2016 00:01:30 -0500

ezc (1.3.0) trusty; urgency=low

  * Rewrote using regex to search
    - Most of the old functions are there, with the exception of mod, int, and trunc
	  They will be implemented soon

 -- Cade Brown <info@chemicaldevelopment.us>  Fri, 18 Nov 2016 21:13:20 -0500

ezcc (1.2.5) trusty; urgency=low

  * Added mod, int, and trunc functions
    - mod, int, and trunc functions calculate modulo, integer trunctation, and multiple truncation

 -- Cade Brown <info@chemicaldevelopment.us>  Thu, 17 Nov 2016 15:46:43 -0500

ezcc (0.8.0) trusty; urgency=low

  * initial package
    - Updated the initial deb package

 -- Cade Brown <info@chemicaldevelopment.us>  Thu, 17 Nov 2016 12:27:32 -0500