###

ChemicalDevelopment

Computes e, euler's number, run `./e.o $bits` to compute $bits of e

###

# read in precision
prec $1

# set precision to one bit
toler = .5; toler = toler ^ prec

# i_f is inverse factorial
e = 1; i_f = 1; prev_sum = e

# loop
for i 1 10000
    # sum factorials
    i_f = i_f / i
    e = e + i_f

    # if we are accurate enough . . .
    diff = e - prev_sum
    if diff < toler
        # break out of loop
        goto end
    fi

    # store previous value
    prev_sum = e
rof

# label for skipping
label end

# display e
var e